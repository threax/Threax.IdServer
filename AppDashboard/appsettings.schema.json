{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "JwtAuth": {
      "$ref": "#/definitions/JwtAuth"
    },
    "ClientConfig": {
      "$ref": "#/definitions/ClientConfig"
    },
    "AppConfig": {
      "$ref": "#/definitions/AppConfig"
    },
    "Deploy": {
      "$ref": "#/definitions/Deploy"
    },
    "DisplayConfig": {
      "$ref": "#/definitions/DisplayConfig"
    },
    "Logging": {
      "type": [
        "null",
        "object"
      ]
    }
  },
  "definitions": {
    "JwtAuth": {
      "title": "IdServerAuthAppOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Authority": {
          "type": [
            "null",
            "string"
          ],
          "description": "The authority to use. Should be the url of the id server."
        },
        "ClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client id to use."
        },
        "Scope": {
          "type": [
            "null",
            "string"
          ],
          "description": "The primary scope for this app."
        },
        "DisplayName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The display name for this application, will be used for the id server metadata."
        },
        "AdditionalScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any additional scopes that this app should request for user tokens. This will allow\nthose user tokens to be flowed to those additional apps.",
          "items": {
            "type": "string"
          }
        },
        "ClientCredentialsScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any scopes that will be used in the client credentials version of the client metadata.\nThe client credentials are how this applicaiton can log into other services to get their\ndata. Those services should be listed here so they are included in the application's jwt\nthat id server creates. This is used when the applicaiton needs to login to a service directly\nand cannot just send the user's token along.",
          "items": {
            "type": "string"
          }
        },
        "ClientSecret": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client secret for this app. This can be null to have no secret. It defaults to\n\"notyetdefined\". Ideally this should be set to something."
        }
      }
    },
    "ClientConfig": {
      "title": "ClientConfig",
      "type": "object",
      "description": "Settings specific to the AppDashboard application. Don't put secret info\nin here as it is sent to the client also.",
      "additionalProperties": false,
      "properties": {
        "ServiceUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base url of the identity service to modify."
        }
      }
    },
    "AppConfig": {
      "title": "AppConfig",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "PathBase": {
          "type": [
            "null",
            "string"
          ],
          "description": "The Path Base for the url. The path base url written here will be forced by the\nUrlFix middleware, it will also be used as the cookie path."
        },
        "UseAssetBundles": {
          "type": "boolean",
          "description": "Set this to true to use asset bundles instead of individual client side files."
        }
      }
    },
    "Deploy": {
      "title": "DeploymentConfig",
      "type": "object",
      "description": "Configuration for k8s deployment.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the app. Is used as a unique key for many settings including urls."
        },
        "Domain": {
          "type": [
            "null",
            "string"
          ],
          "description": "The domain to host the apps on."
        },
        "RepoUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The url of the repository with the app's code."
        },
        "User": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The user id to run the app as. Default: 10000.",
          "format": "int64"
        },
        "Group": {
          "type": [
            "integer",
            "null"
          ],
          "description": "The group id to run the app as. Default: 10000.",
          "format": "int64"
        },
        "Branch": {
          "type": [
            "null",
            "string"
          ],
          "description": "The branch of the repo to use. Default: master."
        },
        "Dockerfile": {
          "type": [
            "null",
            "string"
          ],
          "description": "The path to the dockerfile. This must be specified to use Build."
        },
        "BaseTag": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base tag of the app. This is used when looking up image builds without a registry."
        },
        "AlwaysPull": {
          "type": "boolean",
          "description": "Set this to true to always pull base images when building. Default: True."
        },
        "InitCommand": {
          "type": [
            "null",
            "string"
          ],
          "description": "If this is set to a string that command will be run inside an InitContainer before the main container is started."
        },
        "Volumes": {
          "type": [
            "null",
            "object"
          ],
          "description": "A map of volume mounts.",
          "additionalProperties": {
            "$ref": "#/definitions/Deploy/definitions/Volume"
          }
        },
        "Secrets": {
          "type": [
            "null",
            "object"
          ],
          "description": "A map of secrets.",
          "additionalProperties": {
            "$ref": "#/definitions/Deploy/definitions/Secret"
          }
        },
        "PodJsonFile": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the pod info json file to generate. Default: pod.json."
        },
        "SchemaOutputPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The path to the schema file when running in UpdateSchema mode."
        },
        "AutoMountAppSettings": {
          "type": "boolean",
          "description": "Set this to true to auto mount the app settings config. Default: true."
        },
        "AppSettingsMountPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The mount path for the appsettings file. Default: /app/appsettings.Production.json."
        },
        "AppSettingsSubPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sub path for the appsettings file. Default: appsettings.Production.json."
        }
      },
      "definitions": {
        "Volume": {
          "type": "object",
          "description": "A volume definition.",
          "additionalProperties": false,
          "properties": {
            "Source": {
              "type": [
                "null",
                "string"
              ],
              "description": "The source directory. If no leading / is provided the path will be relative to the AppData path for the app."
            },
            "Destination": {
              "type": [
                "null",
                "string"
              ],
              "description": "The path to mount the volume in in the container."
            },
            "Type": {
              "description": "The type of the volume mount. Default: Directory",
              "oneOf": [
                {
                  "$ref": "#/definitions/Deploy/definitions/PathType"
                }
              ]
            }
          }
        },
        "PathType": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Directory",
            "File"
          ],
          "enum": [
            "Directory",
            "File"
          ]
        },
        "Secret": {
          "type": "object",
          "description": "A secret definition.",
          "additionalProperties": false,
          "properties": {
            "SecretName": {
              "type": [
                "null",
                "string"
              ],
              "description": "The name of the secret to load. This is optional and one will be generated if this is not specified. Default: k8sconfig-secret-{appName}-{key}"
            },
            "Source": {
              "type": [
                "null",
                "string"
              ],
              "description": "The source file to load a file as the secret. This is optional. If the secret already exists you can use SecretName also."
            },
            "Destination": {
              "type": [
                "null",
                "string"
              ],
              "description": "The path to mount the secret in in the target container."
            },
            "Type": {
              "description": "The type of the secret mount. Default: Directory",
              "oneOf": [
                {
                  "$ref": "#/definitions/Deploy/definitions/PathType"
                }
              ]
            }
          }
        }
      }
    },
    "DisplayConfig": {
      "title": "DisplayConfig",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SiteName": {
          "type": [
            "null",
            "string"
          ]
        },
        "SiteNameShort": {
          "type": [
            "null",
            "string"
          ]
        },
        "Favicon": {
          "type": [
            "null",
            "string"
          ]
        },
        "Description": {
          "type": [
            "null",
            "string"
          ]
        },
        "Icon": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/DisplayConfig/definitions/Icon"
            }
          ]
        },
        "StartUrl": {
          "type": [
            "null",
            "string"
          ]
        },
        "Display": {
          "type": [
            "null",
            "string"
          ]
        },
        "ThemeColor": {
          "type": [
            "null",
            "string"
          ]
        },
        "BackgroundColor": {
          "type": [
            "null",
            "string"
          ]
        }
      },
      "definitions": {
        "Icon": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "src": {
              "type": [
                "null",
                "string"
              ]
            },
            "sizes": {
              "type": [
                "null",
                "string"
              ]
            },
            "type": {
              "type": [
                "null",
                "string"
              ]
            }
          }
        }
      }
    }
  }
}